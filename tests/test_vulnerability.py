from typing import Any, Dict
from unittest.mock import patch

import numpy as np
import pytest

from vulnerability.sql_injections import url_vulnerability


def fake_get_request_time(url: str, params: Dict[str, Any]):
    if url.find("https://google.com") == -1 and any([str(value).find("SLEEP") >= 0 for value in params.values()]):
        return 3 + np.random.lognormal()

    return np.random.lognormal()


@patch("utils.requests.get_request_time", fake_get_request_time)
@pytest.mark.parametrize("url, exp_vulnerable", [("https://google.com", False), ("https://test.com", True),])
def test_sql_injection_url_vulnerability(url, exp_vulnerable):
    vulnerable, _, _ = url_vulnerability(url, 100, "id", 1, 3)
    assert vulnerable == exp_vulnerable
